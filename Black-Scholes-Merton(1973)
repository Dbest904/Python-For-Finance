#Import and math and Numpy as Main Package
import math
import numpy as np

#Black-Scholes-Merton(1973) index level at Maturity

#Model and Simulation Parameter values are defined
S0 = 100
K = 105
T= 1.0
r = 0.05
sigma = 0.2

I = 100000

#The Seed value for the random number generator is fixed
np.random.seed(1000)
# Standard Normally Distributed random variables are drawn
z = np.random.standard_normal(I)

#End-of-Period values are simulated
ST = S0 * np.exp((r - sigma ** 2 / 2) * T + sigma * math.sqrt(T) * z)

#The option payoffs at maturity are calculated
hT = np.maximum (ST - K, 0)

#The Monte Carlo Estimator is evaulated
C0 = math.exp(-r * T) * np.mean(hT)

#The reulting Value Estimate is printed 
print('Value of European call option: {:5.3f}.'.format((C0)))
